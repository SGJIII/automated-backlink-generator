"""Add PR campaign fields and update models

Revision ID: 8b6e860928a9
Revises: d299b9eda009
Create Date: 2024-10-13 19:55:31.721482

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector


# revision identifiers, used by Alembic.
revision = '8b6e860928a9'
down_revision = 'd299b9eda009'
branch_labels = None
depends_on = None


def upgrade():
    # Get the SQLite connection
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    existing_columns = [col['name'] for col in inspector.get_columns('campaign')]

    with op.batch_alter_table('campaign', schema=None) as batch_op:
        # Add new columns only if they don't exist
        if 'press_release' not in existing_columns:
            batch_op.add_column(sa.Column('press_release', sa.Text(), nullable=True))
        if 'topic' not in existing_columns:
            batch_op.add_column(sa.Column('topic', sa.String(length=100), nullable=True))
        if 'campaign_type' not in existing_columns:
            batch_op.add_column(sa.Column('campaign_type', sa.String(length=20), nullable=True))
        if 'created_at' not in existing_columns:
            batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        if 'updated_at' not in existing_columns:
            batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))

    # Update existing rows with a default campaign_type
    op.execute("UPDATE campaign SET campaign_type = 'seo' WHERE campaign_type IS NULL")

    with op.batch_alter_table('campaign', schema=None) as batch_op:
        # Now add the NOT NULL constraint
        batch_op.alter_column('campaign_type', nullable=False)

        # Alter existing columns
        batch_op.alter_column('keyword',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.alter_column('target_url',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=200),
               existing_nullable=True)

    # Drop the created_date column if it exists
    with op.batch_alter_table('campaign', schema=None) as batch_op:
        if 'created_date' in existing_columns:
            batch_op.drop_column('created_date')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('campaign', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_date', sa.DATETIME(), nullable=True))
        batch_op.alter_column('status',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('keyword',
               existing_type=sa.VARCHAR(length=100),
               nullable=False,
               existing_server_default=sa.text("'Default Keyword'"))
        batch_op.alter_column('target_url',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=500),
               nullable=False)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('campaign_type')
        batch_op.drop_column('topic')
        batch_op.drop_column('press_release')

    # ### end Alembic commands ###
